# Step 1: Import Required Libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import matplotlib.pyplot as plt

# Step 2: Load and Explore the Dataset
iris_df = pd.read_csv('iris_dataset.csv')
print(iris_df.head())  # Print first few rows
print(iris_df.info())  # Check dataset information
print(iris_df.describe())  # Perform basic statistical analysis

# Step 3: Data Preprocessing
X = iris_df.drop('species', axis=1)  # Features
y = iris_df['species']  # Target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Model Training
model = DecisionTreeClassifier()  # Choose a classifier
model.fit(X_train, y_train)  # Fit the model to the training data

# Step 5: Model Evaluation
y_pred = model.predict(X_test)  # Make predictions on test data

# Evaluate model performance
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

classification_rep = classification_report(y_test, y_pred)
print("Classification Report:\n", classification_rep)

confusion_mat = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:\n", confusion_mat)

# Visualize the confusion matrix
plt.imshow(confusion_mat, cmap='Blues')
plt.title("Confusion Matrix")
plt.colorbar()
plt.xticks(np.arange(3), iris_df['species'].unique(), rotation=45)
plt.yticks(np.arange(3), iris_df['species'].unique())
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()

# Step 6: Conclusion
print("Model training and evaluation completed.")
